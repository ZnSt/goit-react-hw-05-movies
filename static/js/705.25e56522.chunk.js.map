{"version":3,"file":"static/js/705.25e56522.chunk.js","mappings":"gPAEaA,EAAQC,EAAAA,EAAAA,MAAH,0DAKLC,EAAMD,EAAAA,EAAAA,OAAH,sJ,SCNhB,ECEa,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,SACd,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWMC,EAAQ,WACZD,EAAS,GACV,EACD,OACE,0BACE,kBAAMH,SAfW,SAAAK,GACnBA,EAAMC,iBACNN,EAASE,GACTE,GACD,EAWG,WACE,SAACP,EAAD,CAAOU,KAAK,OAAOL,MAAOA,EAAOM,SAVlB,SAAAH,GACnBF,EAASE,EAAMI,cAAcP,MAC9B,KASK,SAACH,EAAD,CAAKQ,KAAK,SAAV,wBAIP,ECgCD,EAlDe,WACb,OAAwCG,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAC/B,GAAoCb,EAAAA,EAAAA,UAAS,IAA7C,eAAOc,EAAP,KAAmBC,EAAnB,KACA,GAAgDf,EAAAA,EAAAA,WAAS,GAAzD,eAAOgB,EAAP,KAAyBC,EAAzB,KAuBA,OAZAC,EAAAA,EAAAA,YAAU,WACJN,GACFO,MAAM,qDAAD,OAnBG,mCAmBH,kBACiEP,IAEnEQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJR,EAAcQ,EAAKC,QACpB,GAEN,GAAE,CAACZ,KAGF,6BACE,SAAC,EAAD,CAAMb,SAvBe,SAAA0B,GACH,KAAhBA,GAIJd,EAAgB,CAAEC,MAAOa,IACzBR,GAAoB,IAJlBS,EAAAA,GAAAA,MAAY,4BAKf,IAiBIV,GAA0C,IAAtBF,EAAWa,QAC9B,qEAEA,wBACGb,EAAWc,KAAI,SAAAC,GAAI,OAClB,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAKE,IACpBC,MAAO,CAAEC,KAAK,iBAAD,OAAmBrB,IAFlC,SAIGiB,EAAKK,kBALDL,EAAKE,GADI,QAc7B,C","sources":["components/Form/Form.styled.jsx","components/Form/index.js","components/Form/Form.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  width: 400px;\n  height: 30px;\n`;\n\nexport const Btn = styled.button`\n  width: 70px;\n  height: 30px;\n  padding: 5px;\n  margin-left: 20px;\n  background-color: transparent;\n  cursor: pointer;\n`;\n","import Form from './Form';\nexport default Form;\n","import { useState } from 'react';\nimport { Input, Btn } from './Form.styled';\n\nconst Form = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(value);\n    reset();\n  };\n\n  const handleChange = event => {\n    setValue(event.currentTarget.value);\n  };\n\n  const reset = () => {\n    setValue('');\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <Input type=\"text\" value={value} onChange={handleChange} />\n        <Btn type=\"submit\">Search</Btn>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Link } from 'react-router-dom';\nimport Form from 'components/Form';\n\nconst myKey = 'b1cca9f4ff0056a5a4eafc6c5006a5a4';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [queryFilms, setQueryFilms] = useState([]);\n  const [isQuerySubmitted, setIsQuerySubmitted] = useState(false);\n\n  const handleFormSubmit = choosenFilm => {\n    if (choosenFilm === '') {\n      toast.error('Please, enter movie name!');\n      return;\n    }\n    setSearchParams({ query: choosenFilm });\n    setIsQuerySubmitted(true);\n  };\n\n  useEffect(() => {\n    if (query) {\n      fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${myKey}&query=${query}`\n      )\n        .then(response => response.json())\n        .then(data => {\n          setQueryFilms(data.results);\n        });\n    }\n  }, [query]);\n\n  return (\n    <main>\n      <Form onSubmit={handleFormSubmit} />\n      {isQuerySubmitted && queryFilms.length === 0 ? (\n        <p>Sorry, but you should turn correct value</p>\n      ) : (\n        <ul>\n          {queryFilms.map(film => (\n            <li key={film.id}>\n              <Link\n                to={`/movies/${film.id}`}\n                state={{ from: `/movies?query=${query}` }}\n              >\n                {film.original_title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["Input","styled","Btn","onSubmit","useState","value","setValue","reset","event","preventDefault","type","onChange","currentTarget","useSearchParams","searchParams","setSearchParams","query","get","queryFilms","setQueryFilms","isQuerySubmitted","setIsQuerySubmitted","useEffect","fetch","then","response","json","data","results","choosenFilm","toast","length","map","film","to","id","state","from","original_title"],"sourceRoot":""}